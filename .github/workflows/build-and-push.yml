name: create
on:
  push:
    branches:
      - "*"
  schedule:
    # rebuild every day for security
    - cron:  '0 0 * * *'

jobs:
  build-and-push:
    strategy:
      fail-fast: true
      matrix:
        year: ["2022"]
        nodejs: ["16"]
        python: ["3.6", "3.7", "3.8", "3.9"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PERSONAL_ACCESS_TOKEN }}

      - name: Timestamp
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: 'YYYYMMDD'

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          # platforms
          # - https://github.com/docker/build-push-action/blob/master/docs/advanced/multi-platform.md
          # - https://hub.docker.com/layers/amazonlinux/library/amazonlinux/2022/images/sha256-c74e77c670519cd69e3f5ce3fa714c02c582a40d786dd7e97113e717e7655e4d?context=explore
          platforms: linux/amd64,linux/arm64/v8
          push: true
          # multiple tags https://github.com/docker/build-push-action#customizing
          # ternary https://github.com/actions/runner/issues/409#issuecomment-752775072
          # latest automatically applied https://stackoverflow.com/questions/22080706/how-to-create-named-and-latest-tag-in-docker#comment85790276_36398336
          tags: |
            fromtheexchange/aws-lambda-ric:${{ matrix.year }}-nodejs${{ matrix.nodejs }}-python${{ matrix.python }}
            fromtheexchange/aws-lambda-ric:${{ matrix.year }}-nodejs${{ matrix.nodejs }}
            fromtheexchange/aws-lambda-ric:${{ matrix.year }}-python${{ matrix.python }}
            fromtheexchange/aws-lambda-ric:${{ matrix.year }}
            fromtheexchange/aws-lambda-ric:nodejs${{ matrix.nodejs }}
            fromtheexchange/aws-lambda-ric:python${{ matrix.python }}
            fromtheexchange/aws-lambda-ric:${{ matrix.year }}-nodejs${{ matrix.nodejs }}-python${{ matrix.python }}-${{ steps.time.outputs.time }}
            fromtheexchange/aws-lambda-ric:${{ matrix.year }}-nodejs${{ matrix.nodejs }}-${{ steps.time.outputs.time }}
            fromtheexchange/aws-lambda-ric:${{ matrix.year }}-python${{ matrix.python }}-${{ steps.time.outputs.time }}
            fromtheexchange/aws-lambda-ric:${{ matrix.year }}-${{ steps.time.outputs.time }}
            fromtheexchange/aws-lambda-ric:nodejs${{ matrix.nodejs }}-${{ steps.time.outputs.time }}
            fromtheexchange/aws-lambda-ric:python${{ matrix.python }}-${{ steps.time.outputs.time }}
            ${{ matrix.year == '2022' && matrix.nodejs == '' && matrix.python == '3.9' && format('fromtheexchange/aws-lambda-ric:{0}-nodejs{1}-python{2}-latest', matrix.year, matrix.nodejs, matrix.python) || ''}}
            ${{ matrix.year == '2022' && matrix.nodejs == '' && matrix.python == '3.9' && format('fromtheexchange/aws-lambda-ric:{0}-nodejs{1}-latest', matrix.year, matrix.nodejs) || ''}}
            ${{ matrix.year == '2022' && matrix.nodejs == '' && matrix.python == '3.9' && format('fromtheexchange/aws-lambda-ric:{0}-python{1}-latest', matrix.year, matrix.python) || ''}}
            ${{ matrix.year == '2022' && matrix.nodejs == '' && matrix.python == '3.9' && format('fromtheexchange/aws-lambda-ric:{0}-latest', matrix.year) || ''}}
            ${{ matrix.year == '2022' && matrix.nodejs == '' && matrix.python == '3.9' && format('fromtheexchange/aws-lambda-ric:nodejs{0}-latest', matrix.nodejs) || ''}}
            ${{ matrix.year == '2022' && matrix.nodejs == '' && matrix.python == '3.9' && format('fromtheexchange/aws-lambda-ric:python{0}-latest', matrix.python) || ''}}
            ${{ matrix.year == '2022' && matrix.nodejs == '' && matrix.python == '3.9' && 'fromtheexchange/aws-lambda-ric:latest' || ''}}

          # FUTURE: temporarily disable, as amazonlinux:2022 only supports nodejs, without versions
          # NODEJS=${{ matrix.nodejs }}
          build-args: |
            YEAR=${{ matrix.year }}
            PYTHON=${{ matrix.python }}
